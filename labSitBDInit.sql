CREATE SCHEMA IF NOT EXISTS USER_SCHEMA;

CREATE TABLE IF NOT EXISTS USER_SCHEMA.USER_ROLE(
    ROLE_ID INTEGER PRIMARY KEY,
    ROLE_NAME VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS USER_SCHEMA.STATUS_TYPE(
    STATUS_ID INTEGER PRIMARY KEY,
    STATUS_TYPE_NAME VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS USER_SCHEMA.USER(
    USER_ID VARCHAR(50) PRIMARY KEY,
    USER_ROLE_ID INTEGER,
    STATUS_TYPE_ID INTEGER,

    foreign key (USER_ROLE_ID) references USER_SCHEMA.USER_ROLE(ROLE_ID),
    foreign key (STATUS_TYPE_ID) references USER_SCHEMA.STATUS_TYPE(STATUS_ID)
);

CREATE SCHEMA IF NOT EXISTS CLIENT_SCHEMA;

CREATE TABLE IF NOT EXISTS CLIENT_SCHEMA.CLIENT(
    ID VARCHAR(20) PRIMARY KEY,
    FIRST_NAME VARCHAR(255), 
    LAST_NAME VARCHAR(255), 
    USER_TYPE TINYINT,
    USER_ID VARCHAR(50),

    foreign key (USER_ID) references USER_SCHEMA.USER(USER_ID) ON UPDATE CASCADE
);

CREATE SCHEMA IF NOT EXISTS ACCOUNT_SCHEMA;

CREATE TABLE IF NOT EXISTS ACCOUNT_SCHEMA.AGENCY_INFO (
    AGENCY_NUMBER INTEGER PRIMARY KEY,
    AGENCY_NAME VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS ACCOUNT_SCHEMA.CLIENT_ACCOUNT (
    AGENCY_NUMBER INTEGER,
    ACCOUNT_NUMBER BIGINT,
    CLIENT_ID VARCHAR(20),
    BALANCE DECIMAL(20,2),

    foreign key (AGENCY_NUMBER) references ACCOUNT_SCHEMA.AGENCY_INFO(AGENCY_NUMBER),
    foreign key (CLIENT_ID) references CLIENT_SCHEMA.CLIENT(ID) ON UPDATE CASCADE,
    primary key (AGENCY_NUMBER, ACCOUNT_NUMBER)
);


CREATE SCHEMA IF NOT EXISTS SECURITY_SCHEMA;

CREATE TABLE IF NOT EXISTS SECURITY_SCHEMA.CREDENTIAL(
    USER_NAME VARCHAR(20) PRIMARY KEY, 
    USER_PASSWORD VARCHAR(20),
    
    foreign key (USER_NAME) references USER_SCHEMA.USER(USER_ID) ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS SECURITY_SCHEMA.TRANSACTION_TYPE(
    TRANSACTION_TYPE_ID INTEGER PRIMARY KEY,
    TRANSACTION_NAME VARCHAR(20)    
);

CREATE TABLE IF NOT EXISTS SECURITY_SCHEMA.TRANSACTION_LOG(
    TRANSACTION_ID VARCHAR(255) PRIMARY KEY,
    USER_ID VARCHAR(20), 
    TRANSACTION_TYPE_ID VARCHAR(20),
    TRANSACTION_DATE TIMESTAMP,
    TRANSACTION_VALUE DECIMAL(20,2),

    foreign key (USER_ID) references USER_SCHEMA.USER(USER_ID) ON UPDATE CASCADE,
    foreign key (TRANSACTION_TYPE_ID) references SECURITY_SCHEMA.TRANSACTION_TYPE(TRANSACTION_TYPE_ID) ON UPDATE CASCADE
);

INSERT INTO USER_SCHEMA.STATUS_TYPE VALUES (1, 'OK'); 
INSERT INTO USER_SCHEMA.STATUS_TYPE VALUES (2, 'BLOCKED');
INSERT INTO USER_SCHEMA.STATUS_TYPE VALUES (3, 'DELETED');
INSERT INTO USER_SCHEMA.STATUS_TYPE VALUES (4, 'DESACTIVATED');

INSERT INTO SECURITY_SCHEMA.TRANSACTION_TYPE VALUES (1, 'DEPOSIT');
INSERT INTO SECURITY_SCHEMA.TRANSACTION_TYPE VALUES (2, 'WITHDRAW');
INSERT INTO SECURITY_SCHEMA.TRANSACTION_TYPE VALUES (3, 'BALANCE');

INSERT INTO USER_SCHEMA.USER_ROLE VALUES (1, 'CLIENT');
INSERT INTO USER_SCHEMA.USER_ROLE VALUES (2, 'MANAGER');

INSERT INTO ACCOUNT_SCHEMA.AGENCY_INFO VALUES (15, 'AgÃªncia Central');

INSERT INTO USER_SCHEMA.USER VALUES ('15_10002004', 1, 1);
INSERT INTO CLIENT_SCHEMA.CLIENT VALUES ('07296531533', 'Eduardo Fillipe','Silva Reis', 1, '15_10002004'); 
INSERT INTO ACCOUNT_SCHEMA.CLIENT_ACCOUNT VALUES (15, 10002004, '07296531533', 1000.50);
INSERT INTO SECURITY_SCHEMA.CREDENTIAL VALUES ('15_10002004', '123456');

COMMIT;